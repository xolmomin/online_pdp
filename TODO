
https://videohub.uz/course-detail/spring-core/b62b723f-b3d6-4118-a768-40008096a1ce
	{
		"id": "c8ae335c-ab72-4b42-8461-9a6a86bc2d24",
		"name": "About Course",
		"order_number": 1,
		"status": "PUBLISHED",
		"type": "VIDEO_LINK",
		"access_type": "PUBLIC",
		"videoDuration": 164
	},


lesson id berilganda video link qaytadi
https://api.videohab.uz/api/v1/course-lesson/public/c8ae335c-ab72-4b42-8461-9a6a86bc2d24
{
    "message": null,
    "code": 200,
    "isError": false,
    "data": {
        "id": "c8ae335c-ab72-4b42-8461-9a6a86bc2d24",
        "name": "About Course",
        "orderNumber": 1,
        "status": "PUBLISHED",
        "type": "VIDEO_LINK",
        "accessType": "PUBLIC",
        "videoDuration": 164,
        "courseSectionId": "413c6bda-1c21-4fc0-9c01-d74cdef58487",
        "content": "",
        "videoId": "https://www.youtube.com/embed/SExRwYdSUYc?si=uO8ITIgvmhMhjeVG",
        "createdDate": "2023-10-09T22:49:51.429986"
    }
}




cd /etc/systemd/system/
nano online_pdp.service

[Unit]
Description=Online pdp
After=network.target

[Service]
WorkingDirectory=/var/www/online_pdp
ExecStart=/var/www/online_pdp/.venv/bin/gunicorn --workers 3 --bind unix:/var/www/online_pdp/online_pdp.sock root.wsgi:application

[Install]
WantedBy=multi-user.target

systemctl enable online_pdp.service
systemctl start online_pdp.service
systemctl status online_pdp.service


cd /etc/nginx/sites-available/

nano online_pdp

server {
    listen 8000;
    server_name 143.198.81.242;
    server_name online_pdp.fil.uz;

    location /static/ {
        alias /var/www/online_pdp/static/;
        expires 30d; # Cache static files for 30 days
    }

    location /media/ {
        alias /var/www/online_pdp/media/;
        expires 30d; # Cache media files for 30 days
    }

    location / {
        include proxy_params;
        proxy_pass http://unix:/var/www/online_pdp/online_pdp.sock; # socket
    }
}

ln -s /etc/nginx/sites-available/online_pdp /etc/nginx/sites-enabled/

nginx -t
systemctl restart nginx.service


sudo certbot --nginx -d xolmomin.fil.uz



task
1. django command to delete unused images
2. djangoda adminkadan youtube url qoyish






TASK
1. interviews fixturs yaratish (python dan 5ta, django 5ta, postgresql 5ta) +
2. interview detailni frontini ozgartirish +
3. https://davronbek.dev/blogs  (blogs)
4. https://videohub.uz/
ga oxshash front yasash AI orqali



Task
1. page larni bir biriga otadigan qilish
2. view larni yozish
3. login, register page lari
4. email orqali verification bolishi kerak (one time link orqali)
5. base.html ga ajratish
6. adminkada (course da course nomi boyicha izlash, blog da blog nomi boyicha izlash)
7. ADMIN
- adminkada list display blog (id, name, created_at)
- adminkada list display course (id, name, total_hour, section_count, lesson_count)
- adminkada list display userlarni barchasida (..., created_at)
- userlarni type ga qarab alohida chiqarish
8. duration course, section, lesson bular read_only
9. oauth2 login google | telegram
10. / blog listni chiqarish
11. /courses course listini chiqarish (pagination bilan)



https://pypi.org/project/django-video-encoding/



TASK
muhammadamin
0. menyuda problems (modelini ham yozish)
1. crun (python-alpine container)
main.py
l = map(int, input().split())
print(*filter(lambda i: i % 2 == 0, l))

input.txt
1 2 3 6 2 6

output.txt
2 6 2 6

2. http://localhost:8000/en/problemset shu yerda, detail otadigan qismini ishlatish



CodePro.uz

Task
1.
userlarni type ga qarab alohida chiqarish
adminkada userlarni ajratish (admin, teacher) ‚úÖ +
2. email orqali verification bolishi kerak (one time link orqali)
3. base.html ga ajratish ‚úÖ +
4. django command to delete unused files
5.
aiogram nomer orqali otish, 42.uz va botcommerce.io ga oxshash
https://videohub.uz/login va https://botcommerce.io/en/login qismdagi
telegram orqali kirish va telegram bot ga sms yuborish orqali kirishni
login va register qoshish

6. django debug toolbar
7. adminkadagi UI togrilash (applarni dropdown qilish, ajratish)
bolimlar (Users, Blogs & Interview, Courses) ‚úÖ +

8. videojs orqali frontda chiqadigan qilish (buttonlari bolsin) ‚úÖ
9. What you'll Learn & Requirements modelini yozish ‚úÖ +
10. login qilgandan keyin (Sign In joyida dumaloq image turadi, ustiga oborgandan fullname chiqsin)
ustiga bosgandan profile page ga otsin
11. register page, detail page shular otadigan qilish ‚úÖ +
12. media ichida fixture dan qoshiladigan malumotlar yuborilsin ‚úÖ +
13. barcha frontdagilarni i18n ga otkazish
14. /problemset
topic boyicha filter
search problem name, id
15. adminka logout pagedagi rasmni togrilash
16. created_at cursor pagination


    <script>
        function convertMp4ToHls(mp4Path, lesson_id) {
            if (!mp4Path.endsWith('.mp4')) {
                console.error('Invalid MP4 path:', mp4Path);
                return null;
            }
            const basePath = mp4Path.replace('/media/courses', '/media/courses/hls/').replace('.mp4', '');
            return `${basePath}/${lesson_id}/master.m3u8`;
        }

        // Video.js player o‚Äòrnatish
        const existingPlayer = videojs.getPlayer('hls-video');
        if (existingPlayer) {
            existingPlayer.dispose();
        }

        const videoElement = document.getElementById('hls-video');
        const player = videojs(videoElement, {
            autoplay: false,
            controls: true,
            preload: 'auto',
            fluid: true,
            responsive: true
        });

        // üéû Video ochish funksiyasi
        function openVideoFrame(videoUrl, lessonId) {
            videoUrl = convertMp4ToHls(videoUrl, lessonId);
            console.log(videoUrl);
            if (!videoUrl) return;
            const modal = document.getElementById('videoModal');
            modal.classList.remove('hidden');

            // Agar HLS.js qo‚Äòllab-quvvatlansa
            if (Hls.isSupported() && videoUrl.endsWith('.m3u8')) {
                const hls = new Hls({
                    xhrSetup: function (xhr, url) {
                        xhr.withCredentials = true; // cookie/session yuborish uchun
                    }
                });
                hls.loadSource(videoUrl);
                hls.attachMedia(videoElement);
                player.play();
            }
            // Safari yoki iOS (native HLS)
            else if (videoElement.canPlayType('application/vnd.apple.mpegurl')) {
                player.src({
                    src: videoUrl,
                    type: 'application/x-mpegURL'
                });
                player.play();
            }
            // Oddiy MP4 fallback
            else {
                player.src({src: videoUrl, type: 'video/mp4'});
                player.play();
            }
        }

        // ‚ùå Video modalni yopish
        function closeVideoModal() {
            player.pause();
            const modal = document.getElementById('videoModal');
            modal.classList.add('hidden');
        }
    </script>