worker_processes auto;

events {
    worker_connections 1024;
}

http {
    # Define upstream backend servers (load balanced)
    upstream backend_cluster {
        # Default method: round robin
        server host.docker.internal:8001 max_fails=3 fail_timeout=30s;
        server host.docker.internal:8002 max_fails=3 fail_timeout=30s;
        server host.docker.internal:8003 max_fails=3 fail_timeout=30s;

        # You could also use:
        # least_conn;     # For least connections
        # ip_hash;        # For sticky sessions (client IP based)
    }

    server {
        listen 8000;
        server_name _;

        # Main reverse proxy location
        location / {
            proxy_pass http://backend_cluster;
            proxy_http_version 1.1;

            # Headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Connection settings
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;

            # Optional buffering for large responses
            proxy_buffering on;
            proxy_buffers 16 16k;
            proxy_buffer_size 16k;
        }

        # Simple health endpoint
        location /health {
            return 200 "OK\n";
            add_header Content-Type text/plain;
        }

        # Optional: static files (if backend doesnâ€™t serve them)
        # location /static/ {
        #     alias /usr/share/nginx/html/static/;
        # }
    }

    # Optional: access log (uncomment if needed)
    access_log /var/log/nginx/access.log;
    error_log  /var/log/nginx/error.log;
}
